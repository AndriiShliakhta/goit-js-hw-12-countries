{"version":3,"sources":["index.js"],"names":["refs","daysField","document","querySelector","hoursField","minsField","secsField","CountdownTimer","constructor","onTick","targetDate","Date","now","intervalId","setInterval","currentTime","deltaTime","time","getTimeComponents","updateClockface","days","Math","floor","hours","pad","mins","secs","value","String","padStart","textContent","countdownTimer","selector"],"mappings":";;;AA0CA,aA1CA,QAAA,oBAEA,MAAMA,EAAO,CACXC,UAAWC,SAASC,cAAc,uBAClCC,WAAYF,SAASC,cAAc,wBACnCE,UAAWH,SAASC,cAAc,uBAClCG,UAAWJ,SAASC,cAAc,wBAGpC,MAAMI,EACJC,aAAY,OAAEC,EAAF,WAAUC,IACfD,KAAAA,OAASA,EACTC,KAAAA,WAAaC,KAAKC,IAAIF,GACtBG,KAAAA,WAAaC,YAAY,KACtBC,MAAAA,EAAcJ,KAAKC,MACnBI,EAAYN,EAAaK,EACzBE,EAAO,KAAKC,kBAAkBF,GACpCG,EAAgBF,GACXR,KAAAA,OAASQ,GACb,KAGLC,kBAAkBD,GAKT,MAAA,CAAEG,KAJIC,KAAKC,MAAML,EAAQ,OAIjBM,MAHD,KAAKC,IAAIH,KAAKC,MAAOL,EAAQ,MAAyB,OAG9CQ,KAFT,KAAKD,IAAIH,KAAKC,MAAOL,EAAQ,KAAoB,MAElCS,KADf,KAAKF,IAAIH,KAAKC,MAAOL,EAAQ,IAAc,OAI1DO,IAAIG,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,MAIrC,SAASV,GAAgB,KAAEC,EAAF,MAAQG,EAAR,KAAeE,EAAf,KAAqBC,IAC5C1B,EAAKC,UAAU6B,eAAiBV,MAChCpB,EAAKI,WAAW0B,eAAiBP,MACjCvB,EAAKK,UAAUyB,eAAiBL,MAChCzB,EAAKM,UAAUwB,eAAiBJ,IAGlC,MAAMK,EAAiB,IAAIxB,EAAe,CACxCyB,SAAU,WACVtB,WAAY,IAAIC,KAAK,gBACrBF,OAAQU","file":"src.c36f5e4a.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n  daysField: document.querySelector('[data-value=\"days\"]'),\n  hoursField: document.querySelector('[data-value=\"hours\"]'),\n  minsField: document.querySelector('[data-value=\"mins\"]'),\n  secsField: document.querySelector('[data-value=\"secs\"]'),\n};\n\nclass CountdownTimer {\n  constructor({ onTick, targetDate }) {\n    this.onTick = onTick;\n    this.targetDate = Date.now(targetDate);\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = targetDate - currentTime;\n      const time = this.getTimeComponents(deltaTime);\n      updateClockface(time);\n      this.onTick = time;\n    }, 1000);\n  }\n\n  getTimeComponents(time) {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nfunction updateClockface({ days, hours, mins, secs }) {\n  refs.daysField.textContent = `${days} :`;\n  refs.hoursField.textContent = `${hours} :`;\n  refs.minsField.textContent = `${mins} :`;\n  refs.secsField.textContent = `${secs}`;\n}\n\nconst countdownTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Aug 31, 2021'),\n  onTick: updateClockface,\n});\n\n\n"]}